player_and_team <- strsplit(player, "(")
print(player_and_team)
ncaa_player <- str_replace_all(str_replace_all(player," ",","),",,",",")
print(ncaa_player)
ncaa_player_vec <<- append(ncaa_player_vec,ncaa_player)
}
for (player in ncaa_bat_stats$Player) {
player_and_team <- strsplit(player, '(')
print(player_and_team)
ncaa_player <- str_replace_all(str_replace_all(player," ",","),",,",",")
print(ncaa_player)
ncaa_player_vec <<- append(ncaa_player_vec,ncaa_player)
}
reg_player <- ncaa_bat_stats$Player[873]
strsplit(reg_player, '(')
strsplit(reg_player, "(")
strsplit(reg_player, ",")
reg_player <- ncaa_bat_stats$Player[873]
strsplit(reg_player, "[(]")
reg_player <- ncaa_bat_stats$Player[873]
strsplit(reg_player, "[()]")
print(reg_player[1])
reg_player <- ncaa_bat_stats$Player[873]
second <- strsplit(reg_player, "[()]")
print(second[1])
reg_player <- ncaa_bat_stats$Player[873]
second <- strsplit(reg_player, "[()]")
print(second[1][1])
reg_player <- ncaa_bat_stats$Player[873]
second <- strsplit(reg_player, "[()]")
print(second[[1]])
reg_player <- ncaa_bat_stats$Player[873]
second <- strsplit(reg_player, "[()]")
print(second[[1]][1])
ncaa_player_vec <- c()
ncaa_team_vec <- c()
for (player in ncaa_bat_stats$Player) {
player_and_team <- strsplit(player, '[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_player <- str_replace_all(str_replace_all(player_pre_clean," ",","),",,",",")
ncaa_player_vec <<- append(ncaa_player_vec,ncaa_player)
ncaa_team_vec <<- append(ncaa_team_vec,team)
}
ncaa_bat_stats$Player = ncaa_player_vec
ncaa_bat_stats$Team = ncaa_team_vec
View(ncaa_bat_stats)
standard_links <- data.frame(links = c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual'),
schema = c('FirstLast'),
separator = c(' '))
#install.packages("rvest")
library(rvest)
library(dplyr)
library(tidyverse)
ncaa_bat_stats = data.frame()
ncaa_pit_stats = data.frame()
for (i in 1:nrow(standard_links)) {
page <- read_html(standard_links[i,1])
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
ncaa_bat_stats <<- rbind(ncaa_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
ncaa_pit_stats <<- rbind(ncaa_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
print(i)
}
View(ncaa_bat_stats)
ncaa_bat_copy <- ncaa_bat_stats
View(ncaa_bat_copy)
#ncaa_player_vec <- c()
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
print("LastFirst")
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][2]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][1]))
}
else {
print("FirstLast")
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][1]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][2]))
}
}
ncaa_player_fname
ncaa_player_lname
ncaa_bat_copy$FirstName = ncaa_player_fname
ncaa_bat_copy$LastName = ncaa_player_lname
ncaa_bat_copy$Team = ncaa_team_vec
View(ncaa_bat_copy)
ncaa_bat_clean <- ncaa_bat_copy %>%
filter(Player != "TRUE") %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,AVG,OPS,GP,GS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(ncaa_bat_clean)
standard_links <-  c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual')
ncaa_bat_stats = data.frame()
ncaa_pit_stats = data.frame()
pac12_bat_stats = data.frame()
pac12_pit_stats = data.frame()
standard_links <-  c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual')
View(ncaa_bat_stats)
ncaa_bat_copy <- ncaa_bat_stats
View(ncaa_bat_copy)
#ncaa_player_vec <- c()
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
print("LastFirst")
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][2]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][1]))
}
else {
print("FirstLast")
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][1]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][2]))
}
}
View(ncaa_bat_stats)
for (i in standard_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
ncaa_bat_stats <<- rbind(ncaa_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
ncaa_pit_stats <<- rbind(ncaa_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
print(i)
}
View(ncaa_bat_stats)
ncaa_bat_copy <- ncaa_bat_stats
View(ncaa_bat_copy)
#ncaa_player_vec <- c()
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
print("LastFirst")
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][2]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][1]))
}
else {
print("FirstLast")
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][1]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][2]))
}
}
ncaa_player_fname
ncaa_player_lname
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][2]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][1]))
}
else {
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][1]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][2]))
}
}
ncaa_bat_copy$FirstName = ncaa_player_fname
ncaa_bat_copy$LastName = ncaa_player_lname
ncaa_bat_copy$Team = ncaa_team_vec
View(ncaa_bat_copy)
ncaa_bat_clean <- ncaa_bat_copy %>%
filter(Player != "TRUE") %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(ncaa_bat_clean)
standard_links <- c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual',
'https://bigten.org/stats.aspx?path=baseball&year=2023#individual',
'https://theamerican.org/stats.aspx?path=baseball&year=2023',
'https://americaeast.com/stats.aspx?path=baseball&year=2023&',
'https://atlantic10.com/stats.aspx?path=baseball&year=2023',
'https://asunsports.org/stats.aspx?path=baseball&year=2023',
'https://big12sports.com/stats.aspx?path=baseball&year=2023',
'https://www.bigeast.com/stats.aspx?path=baseball&year=2023',
'https://bigsouthsports.com/stats.aspx?path=baseball&year=2023',
'https://bigwest.org/stats.aspx?path=baseball&year=2023',
'https://caasports.com/stats.aspx?path=baseball&year=2023',
'https://conferenceusa.com/stats.aspx?path=baseball&year=2023',
'https://horizonleague.org/stats.aspx?path=baseball&year=2023',
'https://ivyleague.com/stats.aspx?path=baseball&year=2023',
'https://maacsports.com/stats.aspx?path=baseball&year=2023',
'https://getsomemaction.com/stats.aspx?path=baseball&year=2023',
'https://mvc-sports.com/stats.aspx?path=baseball&year=2023',
##    'https://themw.com/stats.aspx?path=baseball&year=2023',
'https://northeastconference.org/stats.aspx?path=baseball&year=2023',
'https://ovcsports.com/stats.aspx?path=baseball&year=2023',
'https://patriotleague.org/stats.aspx?path=baseball&year=2023',
'https://www.southland.org/stats.aspx?path=baseball&year=2023',
'https://swac.org/stats.aspx?path=baseball&year=2023',
'https://thesummitleague.org/stats.aspx?path=baseball&year=2023',
'https://sunbeltsports.org/stats.aspx?path=baseball&year=2023',
'https://wccsports.com/stats.aspx?path=baseball&year=2023')
for (i in standard_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
ncaa_bat_stats <<- rbind(ncaa_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
ncaa_pit_stats <<- rbind(ncaa_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
print(i)
}
ncaa_bat_copy <- ncaa_bat_stats
View(ncaa_bat_copy)
#ncaa_player_vec <- c()
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][2]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][1]))
}
else {
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][1]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][2]))
}
}
ncaa_bat_copy$FirstName = ncaa_player_fname
ncaa_bat_copy$LastName = ncaa_player_lname
ncaa_bat_copy$Team = ncaa_team_vec
ncaa_bat_clean <- ncaa_bat_copy %>%
filter(Player != "TRUE") %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(ncaa_bat_clean)
#install.packages("rvest")
library(rvest)
library(dplyr)
library(tidyverse)
### Following conferences missing from below ###
### PAC-12, SEC, SOCON ###
standard_links <- c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual',
'https://bigten.org/stats.aspx?path=baseball&year=2023#individual',
'https://theamerican.org/stats.aspx?path=baseball&year=2023',
'https://americaeast.com/stats.aspx?path=baseball&year=2023&',
'https://atlantic10.com/stats.aspx?path=baseball&year=2023',
'https://asunsports.org/stats.aspx?path=baseball&year=2023',
'https://big12sports.com/stats.aspx?path=baseball&year=2023',
'https://www.bigeast.com/stats.aspx?path=baseball&year=2023',
'https://bigsouthsports.com/stats.aspx?path=baseball&year=2023',
'https://bigwest.org/stats.aspx?path=baseball&year=2023',
'https://caasports.com/stats.aspx?path=baseball&year=2023',
'https://conferenceusa.com/stats.aspx?path=baseball&year=2023',
'https://horizonleague.org/stats.aspx?path=baseball&year=2023',
'https://ivyleague.com/stats.aspx?path=baseball&year=2023',
'https://maacsports.com/stats.aspx?path=baseball&year=2023',
'https://getsomemaction.com/stats.aspx?path=baseball&year=2023',
'https://mvc-sports.com/stats.aspx?path=baseball&year=2023',
##    'https://themw.com/stats.aspx?path=baseball&year=2023',
'https://northeastconference.org/stats.aspx?path=baseball&year=2023',
'https://ovcsports.com/stats.aspx?path=baseball&year=2023',
'https://patriotleague.org/stats.aspx?path=baseball&year=2023',
'https://www.southland.org/stats.aspx?path=baseball&year=2023',
'https://swac.org/stats.aspx?path=baseball&year=2023',
'https://thesummitleague.org/stats.aspx?path=baseball&year=2023',
'https://sunbeltsports.org/stats.aspx?path=baseball&year=2023',
'https://wccsports.com/stats.aspx?path=baseball&year=2023')
pac12_links <- data.frame(links = c('https://thesundevils.com/sports/baseball/stats/2023',
'https://calbears.com/sports/baseball/stats/2023',
'https://arizonawildcats.com/sports/baseball/stats/2023',
'https://osubeavers.com/sports/baseball/stats/2023',
'https://goducks.com/sports/baseball/stats/2023',
'https://usctrojans.com/sports/baseball/stats/2023',
'https://uclabruins.com/sports/baseball/stats/2023',
'https://gostanford.com/sports/baseball/stats/2023',
'https://wsucougars.com/sports/baseball/stats/2023',
'https://gohuskies.com/sports/baseball/stats/2023',
'https://utahutes.com/sports/baseball/stats/2023'),
team_name = c('Arizona State', 'California', 'Arizona', 'Oregon State','Oregon','Southern Cal','UCLA','Stanford','Washington State','Washington','Utah'))
ncaa_bat_stats = data.frame()
ncaa_pit_stats = data.frame()
pac12_bat_stats = data.frame()
pac12_pit_stats = data.frame()
for (i in standard_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
ncaa_bat_stats <<- rbind(ncaa_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
ncaa_pit_stats <<- rbind(ncaa_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
print(i)
}
View(ncaa_bat_stats)
ncaa_bat_copy <- ncaa_bat_stats
View(ncaa_bat_copy)
#ncaa_player_vec <- c()
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][2]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][1]))
}
else {
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,trimws(player_name_split[[1]][1]))
ncaa_player_lname <<- append(ncaa_player_lname,trimws(player_name_split[[1]][2]))
}
}
ncaa_bat_copy$FirstName = ncaa_player_fname
ncaa_bat_copy$LastName = ncaa_player_lname
ncaa_bat_copy$Team = ncaa_team_vec
ncaa_bat_clean <- ncaa_bat_copy %>%
filter(Player != "TRUE") %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(ncaa_bat_clean)
ncaa_bat_copy <- ncaa_bat_stats
View(ncaa_bat_copy)
#ncaa_player_vec <- c()
ncaa_player_fname <- c()
ncaa_player_lname <- c()
ncaa_team_vec <- c()
for (j in 1:nrow(ncaa_bat_copy)){
player_and_team <- strsplit(ncaa_bat_copy$Player[j],'[()]')
player_pre_clean <- player_and_team[[1]][1]
team <- player_and_team[[1]][2]
ncaa_team_vec <<- append(ncaa_team_vec,team)
if (grepl(",",player_pre_clean)==TRUE) {
ncaa_player <- player_pre_clean
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,toupper(trimws(player_name_split[[1]][2])))
ncaa_player_lname <<- append(ncaa_player_lname,toupper(trimws(player_name_split[[1]][1])))
}
else {
ncaa_player <- str_replace_all(str_replace(player_pre_clean,"\\s+", ","),",,",",")
player_name_split <- strsplit(ncaa_player, ',')
ncaa_player_fname <<- append(ncaa_player_fname,toupper(trimws(player_name_split[[1]][1])))
ncaa_player_lname <<- append(ncaa_player_lname,toupper(trimws(player_name_split[[1]][2])))
}
}
ncaa_bat_copy$FirstName = ncaa_player_fname
ncaa_bat_copy$LastName = ncaa_player_lname
ncaa_bat_copy$Team = ncaa_team_vec
ncaa_bat_clean <- ncaa_bat_copy %>%
filter(Player != "TRUE") %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(ncaa_bat_clean)
library(rvest)
library(dplyr)
library(tidyverse)
socon_bat <- read.csv("socon_bat.csv")
setwd('C:/Users/tyler/OneDrive/Coding Work Materials/ncaa_run_expectancies')
socon_bat <- read.csv("socon_bat.csv")
sec_bat <- read.csv("sec_bat.csv")
View(socon_bat)
socon_bat_clean <- socon_bat %>%
mutate(Team = Team)
View(socon_bat_clean)
socon_bat_clean <- socon_bat %>%
mutate(Team = str_remove_all(Team,"."))
View(socon_bat_clean)
socon_bat_clean <- socon_bat %>%
mutate(Team = str_replace_all(Team,".",""))
View(socon_bat_clean)
print(gsub("e", "E", "Hello Geek") )
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","",Team))
View(socon_bat_clean)
socon_bat <- read.csv("socon_bat.csv")
View(socon_bat)
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","",Team))
View(socon_bat_clean)
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub("."," ",Team))
View(socon_bat_clean)
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","r",Team))
View(socon_bat_clean)
team_vec <- socon_bat$Team
team_vec
team_vec <- socon_bat$Team[1]
team_vec
team_vec <- socon_bat$Team[1]
team_vec
new_team <- gsub(".","",team_vec)
new_team
team_vec <- socon_bat$Team[1]
team_vec
new_team <- gsub(".","",team_vec,fixed=TRUE)
new_team
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","",Team,fixed=TRUE))
View(socon_bat_clean)
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","",Team,fixed=TRUE))
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","",Team,fixed=TRUE)) %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
socon_bat_clean <- socon_bat %>%
mutate(Team = gsub(".","",Team,fixed=TRUE),
OPS = OB. + SLG.) %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(socon_bat_clean)
View(sec_bat)
sec_bat <- read.csv("sec_bat.csv")
View(sec_bat)
sec_bat_clean <- sec_bat %>%
mutate(Team = gsub(".","",Team,fixed=TRUE),
OPS = OB. + SLG.) %>%
separate(SB.ATT,c("SB","SB_ATT"),"-") %>%
separate(GP.GS,c("GP","GS"),"-") %>%
rename(SLG = SLG.,OBP = OB.) %>%
select(FirstName,LastName,Team,GP,GS,AVG,OPS,AB,R,H,X2B,X3B,HR,RBI,TB,SLG,BB,HBP,SO,GDP,OBP,SF,SH,SB,SB_ATT)
View(sec_bat_clean)
sec_socon <- bind_rows(socon_bat_clean,sec_bat_clean)
View(sec_socon)
