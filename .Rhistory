all_schools
d1_schools <- all_schools %>% filter(division = 1)
d1_schools <- filter(all_schools, division == 1)
all_schools <- ncaa_school_id_lu(team_name = "")
d1_schools <- filter(all_schools, "division" == 1)
d1_schools
colnames(all_schools)
d1_schools <- filter(all_schools, division == 1)
d1_schools <- filter(all_schools, team_id == 2)
d1_schools <- filter(all_schools, "team_id" == 2)
d1_schools
library("dplyr")
all_schools <- ncaa_school_id_lu(team_name = "")
colnames(all_schools)
d1_schools <- filter(all_schools, team_id == 2)
d1_schools
all_schools <- ncaa_school_id_lu(team_name = "")
d1_schools <- filter(all_schools, division == 1)
d1_schools
unique(d1_schools$division)
d1_schools <- filter(all_schools, division == 1 && year == 2023)
d1_schools
d1_schools <- filter(all_schools, division == 1 & year == 2023)
d1_schools
unique(d1_schools$season_id)
all_team_ids <- unique(d1_schools$team_id)
sort(all_team_ids, decreasing = FALSE)
d1_schools <- filter(all_schools, division == 1 & year == 2023 & team_id ==2)
d1_schools
d1_schools <- filter(all_schools, division == 1 & year == 2023 & team_id ==3)
d1_schools
d1_schools <- filter(all_schools, division == 1 & year == 2023 & team_id == 4)
d1_schools
d1_schools <- filter(all_schools, division == 1 & year == 2023)
d1_schools
all_team_ids <- unique(d1_schools$team_id)
sort(all_team_ids, decreasing = FALSE)
d1_schools <- filter(all_schools, division == 1 & year == 2023 & team_id == 5)
d1_schools
all_team_ids <- sort(unique(d1_schools$team_id), decreasing = FALSE)
all_team_ids
d1_schools <- filter(all_schools, division == 1 & year == 2023)
all_team_ids <- sort(unique(d1_schools$team_id), decreasing = FALSE)
all_team_ids
--install.packages("baseballr")
##install.packages("baseballr")
library("baseballr")
install.packages("baseballr")
install.packages("baseballr")
library("baseballr")
library("dplyr")
all_schools <- ncaa_school_id_lu(team_name = "")
d1_schools <- filter(all_schools, division == 1 & year == 2023)
all_team_ids <- sort(unique(d1_schools$team_id), decreasing = FALSE)
all_team_ids
d1_schools
nc_state_test <- filter(all_schools,conference == 'ACC')
nc_state_test
unique(nc_state_test$team_name)
nc_state_test <- filter(all_schools,team_name == 'NC State')
nc_state_test
x <- ncaa_schedule_info(490, 2023)$game_info_url[2]
ncaa_pbp(game_info_url = x)
nc_state <- ncaa_pbp(game_info_url = x)
nc_state
nc_state.columns
nc_state.columns()
colnames(nc_state)
unique(nc_state$game_pbp_id)
x <- ncaa_schedule_info(490, 2023)#$game_info_url[2]
nc_state <- ncaa_pbp(game_info_url = x)
x
x <- ncaa_schedule_info(490, 2023)$game_info_url[1]
x
nc_state <- ncaa_pbp(game_info_url = x)
unique(nc_state$game_pbp_id)
nc_state <- ncaa_pbp(game_info_url = x)
x <- ncaa_schedule_info(490, 2023)
single_bscore <- x$game_info_url[1]
unique(x$game_info_url)
single_bscore <- x$game_info_url[1]
nc_state <- ncaa_pbp(game_info_url = x)
single_bscore <- x$game_info_url[1]
nc_state <- ncaa_pbp(game_info_url = single_bscore)
singe_pbp <- ncaa_pbp(game_info_url = single_bscore)
single_pbp <- ncaa_pbp(game_info_url = single_bscore)
single_pbp
single_pbp$description
columns(single_pbp)
colnames(single_pbp)
for(i in 1:nrow(single_pbp)) {
print(i)
}
for(i in 1:nrow(single_pbp)) {
print(i$description)
}
for(i in 1:nrow(single_pbp)) {
print(single_pbp[1]$description)
}
for(i in 1:nrow(single_pbp)) {
print(single_pbp[i]$description)
}
single_pbp
every_play <- single_pbp$description
single_pbp <- ncaa_pbp(game_info_url = single_bscore)
every_play <- single_pbp$description
every_play
for(i in 1:nrow(single_pbp)) {
print(single_pbp[i]$description)
}
nrow(single_pbp)
for(i in 1:nrow(single_pbp)) {
single_pbp[i]
}
for(i in 1:nrow(single_pbp)) {
single_pbp[i]$description
}
every_play
row_count <- nrow(single_pbp)
row_count
play <- single_pbp[i]$description
for(i in 1:row_count) {
play <- single_pbp[i]$description
print(play)
}
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single_or_not <- grepl(value, play)
print(play)
print(grepl)
}
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single_or_not <- grepl(value, play)
print(play)
print(single_or_not)
}
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer",play)
print(play)
if (single = TRUE) "SINGLE was hit"
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer",play)
print(play)
if (single == TRUE) {
print("SINGLE was hit")
}
}
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
print(play)
if (single = TRUE) {
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
print(play)
if (single == TRUE) {
print("b is greater than a")
}
}
for(i in 1:row_count) {
play <- single_pbp[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
print(play)
}
single_pbp
sub_df = subset(single_pbp, select = c(inning, inning_top_bot,batting,fielding,description))
sub_df
unique(sub_df)
new_test <- unique(sub_df)
row_count <- nrow(new_test)
row_count
for(i in 1:row_count) {
play <- new_test[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
print(play)
}
my_df <- as.data.frame(sub_df)
my_df
row_count <- nrow(my_df)
row_count
for(i in 1:row_count) {
play <- my_df[i]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
print(play)
}
my_df[1]
my_df
my_df[1,]
my_df[1]
row_count <- nrow(sub_df)
row_count
for(i in 1:row_count) {
play <- my_df[i,]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
print(play)
}
for(i in 1:row_count) {
play <- my_df[i,]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
if (single == TRUE) "Yes A single" else "NOt a single"
}
for(i in 1:row_count) {
play <- my_df[i,]$description
value <- "single"
single <- grepl("single", play)
double <- grepl("double", play)
triple <- grepl("triple", play)
homer <- grepl("homer", play)
if (single == TRUE) print("Yes A single") else print("NOt a single")
}
#install.packages("baseballr")
library("baseballr")
library("dplyr")
library("tidyverse")
remove.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
View(pbp)
install.packages(rvest)
install.packages("rvest")
library(rvest)
acc_page < read_html(links[1])
links <- c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual',
'https://bigten.org/stats.aspx?path=baseball&year=2023#individual')
acc_page < read_html(links[1])
acc_page <- read_html(links[1])
stats <- acc_page %>%
html_elements(css = ".ind_hitting")
stats
stats <- acc_page %>%
html_element("table") %>%
html_table()
stats
stats <- acc_page %>%
html_node('#ind_hitting')
stats
stats <- acc_page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats
stats$Player
stats
data.frame(stats)
stats_pit <- acc_page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
stats_pit
indiv_hit_df <- data.table(stats_hit)
test = data.frame()
test = data.frame()
for (i in standard_links) {
page <- read_html(standard_links[i])
stats_hit <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
hit_df <- data.frame(stats_hit)
pit_df <- data.frame(stats_pit)
test <<- rbind(test,hit_df,use.names=TRUE,fill=TRUE)
}
standard_links <- c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual',
'https://bigten.org/stats.aspx?path=baseball&year=2023#individual')
for (i in standard_links) {
page <- read_html(standard_links[i])
stats_hit <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
hit_df <- data.frame(stats_hit)
pit_df <- data.frame(stats_pit)
test <<- rbind(test,hit_df,use.names=TRUE,fill=TRUE)
}
for (i in standard_links) {
page <- read_html(standard_links[i])
stats_hit <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
hit_df <- data.frame(stats_hit)
pit_df <- data.frame(stats_pit)
##test <<- rbind(test,hit_df,use.names=TRUE,fill=TRUE)
}
for (i in standard_links) {
print(standard_links[i])
page <- read_html(standard_links[i])
stats_hit <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
hit_df <- data.frame(stats_hit)
pit_df <- data.frame(stats_pit)
##test <<- rbind(test,hit_df,use.names=TRUE,fill=TRUE)
}
for (i in standard_links) {
page <- read_html(i)
stats_hit <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
hit_df <- data.frame(stats_hit)
pit_df <- data.frame(stats_pit)
test <<- rbind(test,hit_df,use.names=TRUE,fill=TRUE)
}
View(test)
ncaa_bat_stats = data.frame()
ncaa_pit_stats = data.frame()
for (i in standard_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
ncaa_bat_stats <<- rbind(ncaa_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
ncaa_pit_stats <<- rbind(ncaa_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
}
View(ncaa_pit_stats)
install.packages("rvest")
library(rvest)
### Following conferences missing from below ###
### PAC-12, SEC, SOCON ###
standard_links <- c('https://theacc.com/stats.aspx?path=baseball&year=2023#individual',
'https://bigten.org/stats.aspx?path=baseball&year=2023#individual',
'https://theamerican.org/stats.aspx?path=baseball&year=2023',
'https://americaeast.com/stats.aspx?path=baseball&year=2023&',
'https://atlantic10.com/stats.aspx?path=baseball&year=2023',
'https://asunsports.org/stats.aspx?path=baseball&year=2023',
'https://big12sports.com/stats.aspx?path=baseball&year=2023',
'https://www.bigeast.com/stats.aspx?path=baseball&year=2023',
'https://bigsouthsports.com/stats.aspx?path=baseball&year=2023',
'https://bigwest.org/stats.aspx?path=baseball&year=2023',
'https://caasports.com/stats.aspx?path=baseball&year=2023',
'https://conferenceusa.com/stats.aspx?path=baseball&year=2023',
'https://horizonleague.org/stats.aspx?path=baseball&year=2023',
'https://ivyleague.com/stats.aspx?path=baseball&year=2023',
'https://maacsports.com/stats.aspx?path=baseball&year=2023',
'https://getsomemaction.com/stats.aspx?path=baseball&year=2023',
'https://mvc-sports.com/stats.aspx?path=baseball&year=2023',
'https://themw.com/stats.aspx?path=baseball&year=2023',
'https://northeastconference.org/stats.aspx?path=baseball&year=2023',
'https://ovcsports.com/stats.aspx?path=baseball&year=2023',
'https://patriotleague.org/stats.aspx?path=baseball&year=2023',
'https://www.southland.org/stats.aspx?path=baseball&year=2023',
'https://swac.org/stats.aspx?path=baseball&year=2023',
'https://thesummitleague.org/stats.aspx?path=baseball&year=2023',
'https://sunbeltsports.org/stats.aspx?path=baseball&year=2023',
'https://wccsports.com/stats.aspx?path=baseball&year=2023')
ncaa_bat_stats = data.frame()
ncaa_pit_stats = data.frame()
for (i in standard_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
ncaa_bat_stats <<- rbind(ncaa_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
ncaa_pit_stats <<- rbind(ncaa_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
}
View(ncaa_bat_stats)
install.packages("rvest")
library(rvest)
setwd('C:/Users/tyler/OneDrive/Coding Work Materials/ncaa_run_expectancies')
nnorm_page <- read_html('https://a.espncdn.com/sec/baseball/2023/lgplyrs.htm')
sec_table <- nnorm_page %>%
html_element("pre") %>%
html_element("font") %>%
html_text()
lets_see <- gsub(" ",",",sec_table)
while (grepl(",,",lets_see)) {
lets_see <<- gsub(",,",",",lets_see)
}
writeLines(lets_see,con=file("sec_bat.csv",open="w+"),sep="\n")
writeLines(lets_see,con=file("sec_pit.csv",open="w+"),sep="\n")
## Some manual processing needed prior to next steps. Totals < 1 min ##
sec_bat <- read.csv("sec_bat.csv")
sec_bat <- read.csv("sec_bat.csv")
sec_pit <- read.csv("sec_pit.csv")
setwd('C:/Users/tyler/OneDrive/Coding Work Materials/ncaa_run_expectancies')
nnorm_page <- read_html('https://southernconf_ftp.sidearmsports.com/custompages/socon/stats/baseball/2023/lgplyrs.htm')
##('https://a.espncdn.com/sec/baseball/2023/lgplyrs.htm')
socon_table <- nnorm_page %>%
html_element("pre") %>%
html_element("font") %>%
html_text()
lets_see <- gsub(" ",",",socon_table)
while (grepl(",,",lets_see)) {
lets_see <<- gsub(",,",",",lets_see)
}
writeLines(lets_see,con=file("socon_bat.csv",open="w+"),sep="\n")
writeLines(lets_see,con=file("socon_pit.csv",open="w+"),sep="\n")
socon_bat <- read.csv("socon_bat.csv")
socon_bat <- read.csv("socon_bat.csv")
socon_bat <- read.csv("socon_bat.csv")
socon_pit <- read.csv("socon_pit.csv")
for (i in pac12_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
pac12_bat_stats <<- rbind(pac12_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
pac12_pit_stats <<- rbind(pac12_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
}
pac12_links <- c('https://thesundevils.com/sports/baseball/stats/2023',
'https://calbears.com/sports/baseball/stats/2023',
'https://arizonawildcats.com/sports/baseball/stats/2023',
'https://osubeavers.com/sports/baseball/stats/2023',
'https://goducks.com/sports/baseball/stats/2023',
'https://usctrojans.com/sports/baseball/stats/2023',
'https://uclabruins.com/sports/baseball/stats/2023',
'https://gostanford.com/sports/baseball/stats/2023',
'https://wsucougars.com/sports/baseball/stats/2023',
'https://gohuskies.com/sports/baseball/stats/2023',
'https://utahutes.com/sports/baseball/stats/2023')
for (i in pac12_links) {
page <- read_html(i)
stats_bat <- page %>%
html_node('#ind_hitting') %>%
html_element("table") %>%
html_table()
stats_pit <- page %>%
html_node('#ind_pitching') %>%
html_element("table") %>%
html_table()
bat_df <- data.frame(stats_bat)
pit_df <- data.frame(stats_pit)
pac12_bat_stats <<- rbind(pac12_bat_stats,bat_df,use.names=TRUE,fill=TRUE)
pac12_pit_stats <<- rbind(pac12_pit_stats,pit_df,use.names=TRUE,fill=TRUE)
}
